version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: awesome-project-app
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-3000}
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database service (uncomment and configure as needed)
  # db:
  #   image: postgres:15-alpine
  #   container_name: awesome-project-db
  #   environment:
  #     POSTGRES_DB: ${DB_NAME:-awesome_project}
  #     POSTGRES_USER: ${DB_USER:-postgres}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - app-network
  #   restart: unless-stopped

  # Redis service (uncomment and configure as needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: awesome-project-redis
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - app-network
  #   restart: unless-stopped

networks:
  app-network:
    driver: bridge

# volumes:
#   postgres_data:
#   redis_data: