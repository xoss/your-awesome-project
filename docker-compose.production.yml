version: '3.8'

services:
  backend:
    image: ghcr.io/${GITHUB_REPOSITORY}-backend:${IMAGE_TAG}
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${PROD_DATABASE_URL}
      - REDIS_URL=${PROD_REDIS_URL}
      - JWT_SECRET=${PROD_JWT_SECRET}
      - MINIO_ENDPOINT=${PROD_MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${PROD_MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${PROD_MINIO_SECRET_KEY}
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY}-frontend:${IMAGE_TAG}
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${PROD_POSTGRES_DB}
      - POSTGRES_USER=${PROD_POSTGRES_USER}
      - POSTGRES_PASSWORD=${PROD_POSTGRES_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./database/backup:/backup
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  redis:
    image: redis:7-alpine
    volumes:
      - redis_prod_data:/data
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ACCESS_KEY=${PROD_MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${PROD_MINIO_SECRET_KEY}
    volumes:
      - minio_prod_data:/data
    command: server /data --console-address ":9001"
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.production.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - app-network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

volumes:
  postgres_prod_data:
  redis_prod_data:
  minio_prod_data:

networks:
  app-network:
    driver: overlay
    attachable: true